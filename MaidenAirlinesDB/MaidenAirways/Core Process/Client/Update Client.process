<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.tibco.com/schemas/MaidenAirways/Schemas/Schema.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx2="http://www.tibco.com/schemas/MaidenAirways/Schemas/Schema.xsd4" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.tibco.com/schemas/MaidenAirways/Schemas/Schema.xsd" schemaLocation="/Schemas/Airports.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/MaidenAirways/Schemas/Schema.xsd4" schemaLocation="/Schemas/Clients.xsd"/>
    <pd:name>Core Process/Client/Update Client.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx2:Client"/>
    <pd:startX>150</pd:startX>
    <pd:startY>64</pd:startY>
    <pd:returnBindings>
        <Status>
            <xsl:choose>
                <xsl:when test="$Update/jdbcUpdateActivityOutput/noOfUpdates or $Update/jdbcUpdateActivityOutput/noOfUpdates > 0">
                    <Value>
                        <xsl:value-of select="0"/>
                    </Value>
                </xsl:when>
                <xsl:otherwise>
                    <Value>
                        <xsl:value-of select="-1"/>
                    </Value>
                </xsl:otherwise>
            </xsl:choose>
        </Status>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Status">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Value" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>534</pd:endX>
    <pd:endY>255</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <ClientData ref="pfx2:Client"/>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1565970135118</pd:targetNamespace>
    <pd:activity name="Query ID">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>287</pd:x>
        <pd:y>63</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT * FROM Client WHERE ID = ?</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>ID</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>first_name</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>last_name</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>date_of_birth</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>93</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>DATE</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>gender</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Id_Number</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>address</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>contact_number</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>photo</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>number_miles</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>id_type_client</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>email</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>password</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <ID>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx2:Client/@ID)">
                            <xsl:value-of select="$Start/pfx2:Client/@ID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ID>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Update">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>405</pd:x>
        <pd:y>164</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>UPDATE  Client SET First_Name = ?, Last_Name = ?, Date_Of_Birth = ?, Gender = ?, Id_Number = ?, Address = ?, Contact_Number = ?, Photo = ?, Number_Miles = ?, Id_Type_Client = ?, Email = ?, Password = ? WHERE ID = ?</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>First_Name</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Last_Name</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Date_Of_Birth</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Gender</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Id_Number</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>Address</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Contact_Number</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>Photo</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Number_Miles</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>Id_Type_Client</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>Email</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Password</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ID</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@First_Name !=&quot;&quot;">
                        <First_Name>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@First_Name)">
                                    <xsl:value-of select="$Start/pfx2:Client/@First_Name"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </First_Name>
                    </xsl:when>
                    <xsl:otherwise>
                        <First_Name>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@First_Name)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@First_Name"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </First_Name>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@Last_Name !=&quot;&quot;">
                        <Last_Name>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@Last_Name)">
                                    <xsl:value-of select="$Start/pfx2:Client/@Last_Name"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Last_Name>
                    </xsl:when>
                    <xsl:otherwise>
                        <Last_Name>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@Last_Name)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@Last_Name"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Last_Name>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@Date_Of_Birth !=&quot;&quot;">
                        <Date_Of_Birth>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@Date_Of_Birth)">
                                    <xsl:value-of select="$Start/pfx2:Client/@Date_Of_Birth"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Date_Of_Birth>
                    </xsl:when>
                    <xsl:otherwise>
                        <Date_Of_Birth>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@Date_Of_Birth)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@Date_Of_Birth"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Date_Of_Birth>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@Gender !=&quot;&quot;">
                        <Gender>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@Gender)">
                                    <xsl:value-of select="$Start/pfx2:Client/@Gender"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Gender>
                    </xsl:when>
                    <xsl:otherwise>
                        <Gender>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@Gender)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@Gender"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Gender>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@Id_Number > 0">
                        <Id_Number>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@Id_Number)">
                                    <xsl:value-of select="$Start/pfx2:Client/@Id_Number"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Id_Number>
                    </xsl:when>
                    <xsl:otherwise>
                        <Id_Number>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@Id_Number)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@Id_Number"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Id_Number>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@Address !=&quot;&quot;">
                        <Address>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@Address)">
                                    <xsl:value-of select="$Start/pfx2:Client/@Address"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Address>
                    </xsl:when>
                    <xsl:otherwise>
                        <Address>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@Address)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@Address"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Address>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@Contact_Number !=&quot;&quot;">
                        <Contact_Number>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@Contact_Number)">
                                    <xsl:value-of select="$Start/pfx2:Client/@Contact_Number"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Contact_Number>
                    </xsl:when>
                    <xsl:otherwise>
                        <Contact_Number>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@Contact_Number)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@Contact_Number"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Contact_Number>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@Photo !=&quot;&quot;">
                        <Photo>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@Photo)">
                                    <xsl:value-of select="$Start/pfx2:Client/@Photo"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Photo>
                    </xsl:when>
                    <xsl:otherwise>
                        <Photo>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@Photo)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@Photo"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Photo>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@Number_Miles > 0">
                        <Number_Miles>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@Number_Miles)">
                                    <xsl:value-of select="$Start/pfx2:Client/@Number_Miles"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Number_Miles>
                    </xsl:when>
                    <xsl:otherwise>
                        <Number_Miles>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@Number_Miles)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@Number_Miles"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Number_Miles>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@Id_Type_Client > 0">
                        <Id_Type_Client>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@Id_Type_Client)">
                                    <xsl:value-of select="$Start/pfx2:Client/@Id_Type_Client"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Id_Type_Client>
                    </xsl:when>
                    <xsl:otherwise>
                        <Id_Type_Client>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@Id_Type_Client)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@Id_Type_Client"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Id_Type_Client>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@Email !=&quot;&quot;">
                        <Email>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@Email)">
                                    <xsl:value-of select="$Start/pfx2:Client/@Email"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Email>
                    </xsl:when>
                    <xsl:otherwise>
                        <Email>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@Email)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@Email"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Email>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Start/pfx2:Client/@Password !=&quot;&quot;">
                        <Password>
                            <xsl:choose>
                                <xsl:when test="exists($Start/pfx2:Client/@Password)">
                                    <xsl:value-of select="$Start/pfx2:Client/@Password"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Password>
                    </xsl:when>
                    <xsl:otherwise>
                        <Password>
                            <xsl:choose>
                                <xsl:when test="exists($ClientData/pfx2:Client/@Password)">
                                    <xsl:value-of select="$ClientData/pfx2:Client/@Password"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </Password>
                    </xsl:otherwise>
                </xsl:choose>
                <ID>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx2:Client/@ID)">
                            <xsl:value-of select="$Start/pfx2:Client/@ID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ID>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>283</pd:x>
        <pd:y>252</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Assign Data From Client">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>534</pd:x>
        <pd:y>74</pd:y>
        <config>
            <variableName>ClientData</variableName>
        </config>
        <pd:inputBindings>
            <xsl:for-each select="$Query-ID/resultSet/Record[1]">
                <pfx2:Client>
                    <xsl:attribute name="ID">
                        <xsl:value-of select="id"/>
                    </xsl:attribute>
                    <xsl:attribute name="First_Name">
                        <xsl:value-of select="first_name"/>
                    </xsl:attribute>
                    <xsl:attribute name="Last_Name">
                        <xsl:value-of select="last_name"/>
                    </xsl:attribute>
                    <xsl:attribute name="Date_Of_Birth">
                        <xsl:value-of select="tib:parse-date('yyyy-MM-dd', date_of_birth)"/>
                    </xsl:attribute>
                    <xsl:attribute name="Gender">
                        <xsl:value-of select="gender"/>
                    </xsl:attribute>
                    <xsl:attribute name="Address">
                        <xsl:value-of select="address"/>
                    </xsl:attribute>
                    <xsl:attribute name="Contact_Number">
                        <xsl:value-of select="contact_number"/>
                    </xsl:attribute>
                    <xsl:if test="photo">
                        <xsl:attribute name="Photo">
                            <xsl:value-of select="photo"/>
                        </xsl:attribute>
                    </xsl:if>
                    <xsl:attribute name="Number_Miles">
                        <xsl:value-of select="number_miles"/>
                    </xsl:attribute>
                    <xsl:attribute name="Id_Type_Client">
                        <xsl:value-of select="id_type_client"/>
                    </xsl:attribute>
                    <xsl:attribute name="Email">
                        <xsl:value-of select="email"/>
                    </xsl:attribute>
                    <xsl:attribute name="Password">
                        <xsl:value-of select="password"/>
                    </xsl:attribute>
                    <xsl:attribute name="Id_Number">
                        <xsl:value-of select="Id_Number"/>
                    </xsl:attribute>
                </pfx2:Client>
            </xsl:for-each>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Query ID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Query ID</pd:from>
        <pd:to>Assign Data From Client</pd:to>
        <pd:xpathDescription>Exists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Query-ID/resultSet/Record/id &gt; 0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Query ID</pd:from>
        <pd:to>Null</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Update</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Update</pd:from>
        <pd:to>Null</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign Data From Client</pd:from>
        <pd:to>Update</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>